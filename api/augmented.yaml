definitions:
  AirspaceConflictResponse:
    description: Data provided when an airspace conflict was encountered.
    properties:
      entity_conflicts:
        description: >-
          List of Entity references for which current proof of knowledge was not
          provided.  If this field is present and contains elements, the calling
          USS should query the details URLs for these Entities to obtain their
          details and correct OVNs.  The OVNs can be used to update the key, at
          which point the USS may retry this call.
        items:
          $ref: '#/definitions/EntityReference'
        type: array
      hash_conflicts:
        description: >-
          List of `entity_ids` Hashes (one per DeconflictionKeyHash) for which
          the corresponding entity_ovns did not match the current versions of
          all listed Entities.  If this field is present and contains elements,
          the calling USS should re-query the details of the relevant Entities
          to obtain updated OVNs.
        items:
          $ref: '#/definitions/Hash'
        type: array
      message:
        description: Human-readable message indicating what error occurred and/or why.
        type: string
    type: object
  Altitude:
    description: 'An altitude, in meters, above the WGS84 ellipsoid.'
    example: 19.5
    format: float
    type: number
  ChangeConstraintReferenceResponse:
    description: >-
      Response to a request to create, update, or delete a ConstraintReference.
      in the DSS.
    properties:
      constraint_reference:
        $ref: '#/definitions/ConstraintReference'
        description: >-
          Resulting ConstraintReference stored in DSS.  Omitted if and only if
          ConstraintReference was deleted.
      subscribers:
        description: >-
          DSS subscribers that this client now has the obligation to notify of
          the Constraint changes just made.  This client must call POST for each
          provided URL according to the `/uss/constraints/{id}` path API.
        items:
          $ref: '#/definitions/SubscriberToNotify'
        type: array
    required:
      - subscribers
    type: object
  ChangeOperationalIntentReferenceResponse:
    description: >-
      Response to a request to create, update, or delete an
      OperationalIntentReference in the DSS.
    properties:
      operational_intent_reference:
        $ref: '#/definitions/OperationalIntentReference'
        description: >-
          Resulting OperationalIntentReference stored in DSS.  Omitted if and
          only if OperationalIntentReference was deleted.
      subscribers:
        description: >-
          DSS subscribers that this client now has the obligation to notify of
          the Operation changes just made.  This client must call POST for each
          provided URL according to the `/uss/ops/{id}` path API.
        items:
          $ref: '#/definitions/SubscriberToNotify'
        type: array
    required:
      - subscribers
    type: object
  Constraint:
    description: Full specification of a UTM Constraint.
    properties:
      details:
        $ref: '#/definitions/ConstraintDetails'
      reference:
        $ref: '#/definitions/ConstraintReference'
    required:
      - reference
      - details
    type: object
  ConstraintDetails:
    description: >-
      Details of a UTM Constraint. Note that this data is not stored in the DSS;
      only with the clients.
    properties:
      exempt_operational_intents:
        description: 'List of OperationalIntents exempt from this Constraint, if applicable.'
        items:
          $ref: '#/definitions/EntityUUID'
        type: array
      negotiations_url:
        $ref: '#/definitions/NegotiationsURL'
      rogue_flight:
        $ref: '#/definitions/RogueFlight'
        description: >-
          If this Constraint is an alert for a rogue flight, this field contains
          the details for tracking that flight.
      volumes:
        description: >-
          Volumes that wholly contain the Constraint while being as small as
          practical.
        items:
          $ref: '#/definitions/Volume4D'
        minItems: 1
        type: array
    required:
      - volumes
    type: object
  ConstraintDetailsURL:
    $ref: '#/definitions/URL'
    description: >-
      The URL at which the details of a Constraint may be retrieved.  See
      `/uss/constraints/{id}` path for specification of this endpoint.

      This URL is the base Constraints resource.  If this URL is specified as
      https://example.com/constraints then the details for a particular {id} may
      be obtained at the URL https://example.com/constraints/{id}.  This URL may
      not have a trailing / character.
    example: 'https://example.com/constraints'
  ConstraintReference:
    description: >-
      A ConstraintReference (area in which a Constraint is present, along with
      other high-level information, but no details).  The DSS reports only these
      references and clients must exchange details and additional information
      peer-to-peer.
    properties:
      details_url:
        $ref: '#/definitions/ConstraintDetailsURL'
      error_reports_url:
        $ref: '#/definitions/ErrorReportsURL'
      id:
        $ref: '#/definitions/EntityUUID'
        description: Unique identifier for this ConstraintReference.
      ovn:
        $ref: '#/definitions/EntityOVN'
        description: >-
          Opaque version number of this ConstraintReference, used for updating
          or deleting the ConstraintReference.  Only populated by the DSS for
          ConstraintReferences owned by the requesting client.  Must be
          populated by a USS when notifying a subscriber of an altered
          Constraint or providing full Constraint information.
      owner:
        description: >-
          Assigned by the DSS based on creating client’s ID (via access token). 
          Used for restricting mutation and deletion operations to owner.
        example: myuss
        type: string
      time_end:
        description: 'End time of Operation.  RFC 3339 format, per OpenAPI specification.'
        format: date-time
        type: string
      time_start:
        description: >-
          Beginning time of Operation.  RFC 3339 format, per OpenAPI
          specification.
        format: date-time
        type: string
    required:
      - id
      - details_url
      - owner
      - time_start
      - time_end
    type: object
  CreateConstraintReferenceParameters:
    description: Parameters for a request to create a ConstraintReference in the DSS.
    properties:
      details_url:
        $ref: '#/definitions/ConstraintDetailsURL'
      error_reports_url:
        $ref: '#/definitions/ErrorReportsURL'
      extents:
        $ref: '#/definitions/Volume4D'
        description: >-
          The bounding spacetime extents of this ConstraintReference.  End time
          must be specified.  If start time is not specified, it will be set to
          the current time.  Start times in the past should be rejected by the
          DSS, except that it may adjust very recent start times to the current
          time.
    required:
      - extents
      - details_url
    type: object
  CreateIdentificationServiceAreaParameters:
    description: >-
      Parameters for a request to create an Identification Service Area in the
      DSS.
    properties:
      extents:
        $ref: '#/definitions/Volume4D'
        description: >-
          The bounding spacetime extents of this Identification Service Area. 
          End time must be specified.  If start time is not specified, it will
          be set to the current time.  Start times in the past should be
          rejected by the DSS, except that it may adjust very recent start times
          to the current time.


          These extents should not reveal any sensitive information about the
          flight or flights within them.  This means, for instance, that extents
          should not tightly-wrap a flight path, nor should they generally be
          centered around the takeoff point of a single flight.
      flights_url:
        $ref: '#/definitions/RIDFlightsURL'
    required:
      - extents
      - flights_url
    type: object
  CreateOperationalIntentReferenceParameters:
    description: >-
      Parameters for a request to create an OperationalIntentReference in the
      DSS.
    properties:
      details_url:
        $ref: '#/definitions/OperationalIntentDetailsURL'
      error_reports_url:
        $ref: '#/definitions/ErrorReportsURL'
      extents:
        $ref: '#/definitions/Volume4D'
        description: >-
          The bounding spacetime extents of this OperationalIntentReference. 
          End time must be specified.  If start time is not specified, it will
          be set to the current time.  Start times in the past should be
          rejected by the DSS, except that it may adjust very recent start times
          to the current time.
      key:
        $ref: '#/definitions/DeconflictionKey'
        description: >-
          Proof that the client is aware of all relevant Entities with the
          requirement that the client has deconflicted with all these Entities. 
          Relevant Entities for OperationalIntents consist of all Constraints,
          and OperationalIntents with equal or higher priority.
      priority:
        $ref: '#/definitions/OperationalIntentPriority'
    required:
      - extents
      - details_url
      - priority
      - key
    type: object
  CreateSubscriptionParameters:
    description: Parameters for a request to create a subscription in the DSS.
    properties:
      callbacks:
        $ref: '#/definitions/SubscriptionCallbacks'
      extents:
        $ref: '#/definitions/Volume4D'
        description: >-
          The spacetime extents of the volume to subscribe to.


          This subscription will automatically be deleted after its end time if
          it has not been refreshed by then.  If end time is not specified, the
          value will be chosen automatically by the DSS.


          Note that some Entities triggering notifications may lie entirely
          outside the requested area.
    required:
      - extents
      - callbacks
    type: object
  DeconflictionKey:
    description: >
      Proof that a client has obtained the latest airspace content, used to
      ensure that write operations to the DSS occur only when the latest content
      is known (i.e. has been read). The client is required to pass a current
      DeconflictionKey constructed from information obtained with previous read
      operations and subsequent requests for full information, and optionally,
      subscription updates for deconflicted write operations to the DSS.  The
      contents of this data structure are generated by the client.
    properties:
      hashes:
        $ref: '#/definitions/DeconflictionKeyHash'
        description: >-
          Optional (optimization).  May be provided for a set of Entities so
          that each of the included EntityOVNs does not need to be included in
          the `ovns` property.
      ovns:
        $ref: '#/definitions/OVNDictionary'
        description: >-
          For each of a subset of Entities declared by the DSS in the area of
          interest, the OVN of the current version of the full information of
          that Entity.  This EntityOVN is provided by the client who defined the
          Entity, accompanying the full Entity definition data when that data is
          received.
      subscription:
        $ref: '#/definitions/SubscriptionUUID'
        description: >-
          If the client obtained the information in this DeconflictionKey via a
          subscription, this field is set to the ID of that subscription so the
          usage of subscriptions can be tracked and unused subscriptions can be
          removed.
    type: object
  DeconflictionKeyHash:
    description: >-
      A shortcut (optimization) data structure that may be provided instead of a
      large set of individually-listed EntityOVNs.
    properties:
      entity_ids:
        $ref: '#/definitions/Hash'
        description: >-
          Hash of an ordered list of other clients’ EntityUUIDs in the airspace
          (obtained from DSS via GET /v1/dss/<entity type>s) excluding the
          EntityUUIDs explicitly specified in DeconflictionKey's `ovns`
          property.
      entity_ovns:
        $ref: '#/definitions/Hash'
        description: >-
          Hash of an ordered list of EntityOVNs that correspond with the list of
          EntityUUIDs used to generate the `entity_ids` property value.
    required:
      - entity_ids
      - entity_ovns
    type: object
  DeleteIdentificationServiceAreaResponse:
    description: Response for a request to delete an Identification Service Area.
    properties:
      service_area:
        $ref: '#/definitions/IdentificationServiceArea'
        description: Indentification Service Area that was just deleted.
      subscribers:
        description: >-
          DSS subscribers that this client now has the obligation to notify of
          the Identification Service Area just deleted.  This client must call
          POST for each provided URL according to the `/uss/isas` path API.
        items:
          $ref: '#/definitions/SubscriberToNotify'
        type: array
    required:
      - service_area
      - subscribers
    type: object
  DeleteSubscriptionResponse:
    description: Response for a successful request to delete an Subscription.
    properties:
      subscription:
        $ref: '#/definitions/Subscription'
        description: The Subscription which was deleted.
    required:
      - subscription
    type: object
  EntityOVN:
    description: >-
      A token associated with a particular UTM Entity+version created by the DSS
      upon creation or modification of an Entity reference and provided to the
      client creating or modifying the Entity reference.  The EntityOVN is
      stored privately by the DSS and then compared against entries in a Key
      provided to mutate the airspace.  The EntityOVN is also provided by the
      client whenever that client transmits the full information of the Entity
      (either via GET, or via a subscription notification).
    properties:
      token:
        $ref: '#/definitions/Token'
        description: >-
          Unique value associated with a specific version of a specific Entity. 
          Token value may not be reused for any other Entity versions; it must
          change each time the Entity changes.
      version:
        description: >-
          This version increases each time an Entity is modified.  If a client
          ever receives a subscription update with an EntityOVN for a particular
          EntityUUID that is smaller than the cached EntityOVN for that
          EntityUUID, that subscription update should be ignored.
        format: int32
        type: integer
    required:
      - token
      - version
    title: EntityOVN
    type: object
  EntityReference:
    description: Reference to a generic Entity known to the DSS.
    properties:
      constraint_reference:
        $ref: '#/definitions/ConstraintReference'
        description: ''
      operational_intent_reference:
        $ref: '#/definitions/OperationalIntentReference'
        description: ''
    type: object
  EntityUUID:
    $ref: '#/definitions/UUIDv4'
    description: >-
      Universally-unique identifier for an Entity communicated through the DSS. 
      Formatted as UUIDv4.
  ErrorReportsURL:
    $ref: '#/definitions/URL'
    description: >-
      The URL at which an error report may be submitted.  See
      `/uss/error_reports/{id}` path for specification of this endpoint.

      This URL is the base ErrorReports resource.  If this URL is specified as
      https://example.com/error_reports then an error report with {id} may be
      submitted at the URL https://example.com/error_reports/{id}.  This URL may
      not have a trailing / character.
    example: 'https://example.com/error_reports'
  ErrorResponse:
    description: Data provided when an off-nominal condition was encountered.
    properties:
      message:
        description: Human-readable message indicating what error occurred and/or why.
        type: string
    type: object
  GeoPolygon:
    description: >-
      An enclosed area on the earth.

      The bounding edges of this polygon shall be the shortest paths between
      connected vertices.  This means, for instance, that the edge between two
      points both defined at a particular latitude is not generally contained at
      that latitude.

      The winding order shall be interpreted as the order which produces the
      smaller area.

      The path between two vertices shall be the shortest possible path between
      those vertices.

      Edges may not cross.

      Vertices may not be duplicated.  In particular, the final polygon vertex
      shall not be identical to the first vertex.
    properties:
      vertices:
        items:
          $ref: '#/definitions/LatLngPoint'
        minItems: 3
        type: array
    required:
      - vertices
    type: object
  GeoPolygonString:
    description: >-
      Plain-string representation of a geographic polygon consisting of at least
      three geographic points describing a closed polygon on the earth.  Each
      point consists of latitude,longitude in degrees.  Points are also
      comma-delimited, so this parameter will look like
      `lat1,lng1,lat2,lng2,lat3,lng3,...`  Latitude values must fall in the
      range [-90, 90] and longitude values must fall in the range [-180, 180].


      All of the requirements and clarifications for GeoPolygon apply to
      GeoPolygonString as well.
    type: string
  GetConstraintReferenceResponse:
    description: Response to DSS request for the ConstraintReference with the given ID.
    properties:
      constraint_reference:
        $ref: '#/definitions/ConstraintReference'
    required:
      - constraint_reference
    type: object
  GetConstraintResponse:
    description: Response to peer request for the details of Operation with the given ID.
    properties:
      constraint:
        $ref: '#/definitions/Constraint'
    required:
      - constraint
    type: object
  GetFlightDetailsResponse:
    description: Response to remote ID provider query for details about a specific flight.
    properties:
      details:
        $ref: '#/definitions/RIDFlightDetails'
    required:
      - details
    type: object
  GetFlightsResponse:
    description: >-
      Response to remote ID provider query for flight information in an area of
      interest.
    properties:
      flights:
        description: >-
          A list of all flights that have been within the requested area within
          the remote ID retention period.  This includes flights that are not
          currently within the requested area, but were within the requested
          area within the remote ID retention period.
        items:
          $ref: '#/definitions/RIDFlight'
        type: array
      timestamp:
        description: >-
          The remote ID service provider's timestamp for when this information
          was current.  RFC 3339 format, per OpenAPI specification.
        format: date-time
        type: string
    required:
      - timestamp
      - flights
    type: object
  GetHostNamesResponse:
    description: >-
      Response to a request for information tracked by the DSS regarding the
      status of a particular hostname.
    properties:
      status:
        $ref: '#/definitions/HostNameStatus'
      version:
        $ref: '#/definitions/UUIDv4'
        description: >-
          Current version of hostname status.  Must be provided to the DSS when
          changing the hostname's status.
    required:
      - status
      - version
    type: object
  GetIdentificationServiceAreaResponse:
    description: >-
      Response to DSS request for the identification service area with the given
      id.
    properties:
      service_area:
        $ref: '#/definitions/IdentificationServiceArea'
    required:
      - service_area
    type: object
  GetOperationalIntentReferenceResponse:
    description: >-
      Response to DSS request for the OperationalIntentReference with the given
      ID.
    properties:
      operational_intent_reference:
        $ref: '#/definitions/OperationalIntentReference'
    required:
      - operational_intent_reference
    type: object
  GetOperationalIntentResponse:
    description: >-
      Response to peer request for the details of OperationalIntent with the
      given ID.
    properties:
      operational_intent:
        $ref: '#/definitions/OperationalIntent'
    required:
      - operational_intent
    type: object
  GetSubscriptionResponse:
    description: Response to DSS request for the subscription with the given id.
    properties:
      subscription:
        $ref: '#/definitions/Subscription'
    required:
      - subscription
    type: object
  Hash:
    description: >-
      Base64 representation of a SHA256 hash of the given inner content.  If
      this Hash is for multiple entries, the entries should be concatenated
      together with delimiting commas (but no spaces) before performing the
      hash.  For instance, the Hash of the three UUIDs
      4704a043-8212-4256-9dec-7ef5a79218e2,
      b1220203-fc2a-422d-9604-12464a9b45e0, and
      cca95e90-3163-47d8-bb0e-a7c5c88f078f would be
      d8NoNy0cPAd7D3b8Qb0DSzcrBVJElwBfmqVcytIoWsk= in base64 which is
      77c368372d1c3c077b0f76fc41bd034b372b05524497005f9aa55ccad2285ac9 in
      hexadecimal.
    example: d8NoNy0cPAd7D3b8Qb0DSzcrBVJElwBfmqVcytIoWsk=
    maxLength: 44
    minLength: 44
    pattern: '^[0-9a-zA-Z+\/]{43}=$'
    type: string
  HorizontalAccuracy:
    description: >-
      This is the NACp enumeration from ADS-B, plus 1m for a more complete range
      for UAs.


      `HAUnknown`: Unknown horizontal accuracy


      `HA10NMPlus`: > 10NM (18.52km)


      `HA10NM`: < 10NM (18.52km)


      `HA4NM`: < 4NM (7.408km)


      `HA2NM`: < 2NM (3.704km)


      `HA1NM`: < 1NM (1852m)


      `HA05NM`: < 0.5NM (926m)


      `HA03NM`: < 0.3NM (555.6m)


      `HA01NM`: < 0.1NM (185.2m)


      `HA005NM`: < 0.05NM (92.6m)


      `HA30m`: < 30m


      `HA10m`: < 10m


      `HA3m`: < 3m


      `HA1m`: < 1m
    enum:
      - HAUnknown
      - HA10NMPlus
      - HA10NM
      - HA4NM
      - HA2NM
      - HA1NM
      - HA05NM
      - HA03NM
      - HA01NM
      - HA005NM
      - HA30m
      - HA10m
      - HA3m
      - HA1m
    type: string
  HostName:
    description: Valid hostname (no protocol or path allowed).
    type: string
  HostNameStatus:
    description: Status of a hostname as tracked by the DSS.
    properties:
      down:
        description: >-
          If true, the DSS believes this hostname is down.  Future
          OperationalIntents whose details are hosted by this hostname may be
          disabled by the DSS if another USS wishes to plan in the area.
        type: boolean
    required:
      - down
    type: object
  IdentificationServiceArea:
    description: >-
      An Identification Service Area (area in which remote ID services are being
      provided).  The DSS reports only these declarations and clients must
      exchange flight information peer-to-peer.
    properties:
      flights_url:
        $ref: '#/definitions/RIDFlightsURL'
      id:
        $ref: '#/definitions/EntityUUID'
        description: Unique identifier for this Identification Service Area.
      owner:
        description: >-
          Assigned by the DSS based on creating client’s ID (via access token). 
          Used for restricting mutation and deletion operations to owner.
        example: myuss
        type: string
      time_end:
        description: 'End time of service.  RFC 3339 format, per OpenAPI specification.'
        format: date-time
        type: string
      time_start:
        description: >-
          Beginning time of service.  RFC 3339 format, per OpenAPI
          specification.
        format: date-time
        type: string
      version:
        $ref: '#/definitions/Version'
    required:
      - flights_url
      - owner
      - time_start
      - time_end
      - version
      - id
    type: object
  IdentificationServiceAreaURL:
    $ref: '#/definitions/URL'
    description: >-
      The URL at which notifications regarding Identification Service Areas may
      be delivered.  See the `/uss/isas/{id}` path for specification of this
      endpoint.
    example: 'https://example.com/isas/a4c6f8c0-ad77-4d93-9cc2-ec8601383f96'
    type: string
  LatLngPoint:
    description: Point on the earth's surface.
    properties:
      lat:
        $ref: '#/definitions/Latitude'
      lng:
        $ref: '#/definitions/Longitude'
    required:
      - lat
      - lng
    type: object
  Latitude:
    description: >-
      Degrees of latitude north of the equator, with reference to the WGS84
      ellipsoid.
    example: 34.123
    exclusiveMaximum: false
    exclusiveMinimum: false
    format: double
    maximum: 90
    minimum: -90
    type: number
  Longitude:
    description: >-
      Degrees of longitude east of the Prime Meridian, with reference to the
      WGS84 ellipsoid.
    example: -118.456
    exclusiveMaximum: false
    exclusiveMinimum: false
    format: double
    maximum: -180
    minimum: 180
    type: number
  NegotiationParameters:
    description: >-
      Parameters of a negotiation request for a set of OperationalIntents and/or
      Constraints to be deconflicted with a proposed OperationalIntent.
    properties:
      conflicting_constraints:
        description: >-
          Constraints that the initiating DSS is requesting be deconflicted from
          (or an exemption added for) the proposed_operational_intent.
        items:
          $ref: '#/definitions/EntityUUID'
        type: array
      conflicting_operational_intents:
        description: >-
          OperationalIntents that the initiating USS is requesting be
          deconflicted from the proposed_operational_intent.
        items:
          $ref: '#/definitions/EntityUUID'
        type: array
      proposed_operational_intent:
        $ref: '#/definitions/OperationalIntent'
        description: >-
          Full information of proposed OperationalIntent from which the
          conflicting_entities should be deconflicted.
    required:
      - proposed_operational_intent
    type: object
  NegotiationResponse:
    description: >-
      Response to a successful negotiation request to deconflict a set of
      OperationalIntents and/or Constraints from a proposed OperationalIntent.
    properties:
      constraints:
        description: >-
          Full information for updated Constraints deconflicted in response to
          this negotiation request.
        items:
          $ref: '#/definitions/Constraint'
        type: array
      operational_intents:
        description: >-
          Full information for updated OperationalIntents deconflicted in
          response to this negotiation request.
        items:
          $ref: '#/definitions/OperationalIntent'
        type: array
    type: object
  NegotiationsURL:
    $ref: '#/definitions/URL'
    description: >-
      The URL at which negotiations may be requested.  See
      `/uss/negotiations/{id}` path for specification of this endpoint.

      This URL is the base negotiations resource.  If this URL is specified as
      https://example.com/negotiations then a negotiation with {id} may be
      requested at the URL https://example.com/negotiations/{id}.  This URL may
      not have a trailing / character.
    example: 'https://example.com/negotiations'
  OVNDictionary:
    description: Collection of mappings between EntityUUID and EntityOVN.
    items:
      $ref: '#/definitions/OVNEntry'
    type: array
  OVNEntry:
    description: Mapping between an EntityUUID and an EntityOVN.
    properties:
      id:
        $ref: '#/definitions/EntityUUID'
        description: ''
      sig:
        $ref: '#/definitions/EntityOVN'
        description: ''
    required:
      - id
      - sig
    type: object
  OperationalIntent:
    description: Full description of a UTM OperationalIntent.
    properties:
      details:
        $ref: '#/definitions/OperationalIntentDetails'
      reference:
        $ref: '#/definitions/OperationalIntentReference'
    required:
      - reference
      - details
    type: object
  OperationalIntentDetails:
    description: >-
      Details of a UTM OperationalIntent. Note that this data is not stored in
      the DSS; only with the clients.
    properties:
      negotiations_url:
        $ref: '#/definitions/NegotiationsURL'
      state:
        $ref: '#/definitions/OperationalIntentState'
      volumes:
        description: >-
          Volumes that wholly contain the Operation while being as small as
          practical.
        items:
          $ref: '#/definitions/Volume4D'
        minItems: 1
        type: array
    required:
      - volumes
    type: object
  OperationalIntentDetailsURL:
    $ref: '#/definitions/URL'
    description: >-
      The URL at which the details of an OperationalIntent may be retrieved. 
      See `/uss/ops/{id}` path for specification of this endpoint.  This URL is
      the base OperationalIntents resource.  If this URL is specified as
      https://example.com/ops then the details for a particular {id} may be
      obtained at the URL https://example.com/ops/{id}.  This URL may not have a
      trailing / character.
    example: 'https://example.com/ops'
  OperationalIntentPriority:
    description: >-
      Ordinal priority of this OperationalIntent.  Determined by client USS via
      a function of the details of the OperationalIntent according to relevant
      regulations.  The simplest (non-prioritized) of these functions would be
      one that returns 0 priority for any OperationalIntents.
    format: int32
    type: integer
  OperationalIntentReference:
    description: >-
      An OperationalIntentReference (area in which an Operation is being
      conducted, along with other high-level information, but no details).  The
      DSS reports only these references and clients must exchange details and
      additional information peer-to-peer.
    properties:
      details_url:
        $ref: '#/definitions/OperationalIntentDetailsURL'
      disabled:
        description: >-
          If specified as true by the DSS, this OperationalIntent has been
          disabled and will not be permitted to transition to Activated.  This
          means aircraft for this OperationalIntent will not be permitted to fly
          pursuant to this OperationalIntent, so this OperationalIntent may be
          ignored when planning and its OVN does not need to be provided to
          prove relevant airspace knowledge.
        type: boolean
      error_reports_url:
        $ref: '#/definitions/ErrorReportsURL'
      id:
        $ref: '#/definitions/EntityUUID'
        description: Unique identifier for this OperationalIntentReference.
      ovn:
        $ref: '#/definitions/EntityOVN'
        description: >-
          Opaque version number of this OperationalIntentReference, used for
          updating or deleting the OperationalIntentReference.  Only populated
          by the DSS for OperationalIntentReferences owned by the requesting
          client.  Must be populated by a USS when notifying a subscriber of an
          altered OperationalIntent or providing full OperationalIntent
          information.
      owner:
        description: >-
          Assigned by the DSS based on creating client’s ID (via access token). 
          Used for restricting mutation and deletion operations to owner.
        example: myuss
        type: string
      priority:
        $ref: '#/definitions/OperationalIntentPriority'
      time_end:
        description: 'End time of Operation.  RFC 3339 format, per OpenAPI specification.'
        format: date-time
        type: string
      time_start:
        description: >-
          Beginning time of Operation.  RFC 3339 format, per OpenAPI
          specification.
        format: date-time
        type: string
      uss_may_be_down:
        description: >-
          If specified as true by the DSS, the details for this
          OperationalIntent may not be accessible.  The OVN for this
          OperationalIntentReference may be omitted when deconflicting an
          OperationalIntent, at which point this OperationalIntent will be
          disabled.
        type: boolean
    required:
      - details_url
      - owner
      - time_start
      - time_end
      - id
      - priority
    type: object
  OperationalIntentState:
    description: >-
      State of an OperationalIntent.


      `Proposed`: This OperationalIntent has not yet been fully deconflicted
      with other Entities, but the owning USS is pursuing negotiations to
      complete deconfliction.


      `Accepted`: This OperationalIntent was fully deconflicted from other
      Entities at the time it changed to this state, but no aircraft associated
      with it are active yet.


      `Activated`: One or more aircraft associated with this OperationalIntent
      are, or will imminently be, in flight.
    enum:
      - Proposed
      - Accepted
      - Activated
    type: string
  PostConstraintNotificationParameters:
    description: >-
      Parameters of a message informing of new full information for a
      Constraint.  Pushed (by a client, not the DSS) directly to clients with
      subscriptions when another client makes a change to airspace within a cell
      with a subscription.
    properties:
      constraint:
        $ref: '#/definitions/Constraint'
        description: >-
          Constraint that the notifying client changed or created.


          If this field is populated, the Constraint was created or updated.  If
          this field is not populated, the Constraint was deleted.
      subscriptions:
        description: Subscription(s) prompting this notification.
        items:
          $ref: '#/definitions/SubscriptionState'
        type: array
    required:
      - subscriptions
    type: object
  PostOperationalIntentNotificationParameters:
    description: >-
      Parameters of a message informing of new full information for an
      OperationalIntent.  Pushed (by a client, not the DSS) directly to clients
      with subscriptions when another client makes a change to airspace within a
      cell with a subscription.
    properties:
      operational_intent:
        $ref: '#/definitions/OperationalIntent'
        description: >-
          Full information for OperationalIntent that the notifying client
          changed or created.


          If this field is populated, the OperationalIntent was created or
          updated.  If this field is not populated, the OperationalIntent was
          deleted.
      subscriptions:
        description: Subscription(s) prompting this notification.
        items:
          $ref: '#/definitions/SubscriptionState'
        type: array
    required:
      - subscriptions
    type: object
  PutErrorReportParameters:
    description: >-
      Parameters of a message informing a USS of an error that the USS would
      otherwise not notice.
    properties:
      body:
        description: Base64-encoded body content sent in request that resulted in an error.
        type: string
      endpoint_url:
        description: URL for request that resulted in an error.
        type: string
      headers:
        description: Set of headers included in request that resulted in an error.
        items:
          type: string
        type: array
      problem:
        description: Human-readable description of the problem with the response.
        type: string
      response_body:
        description: Base64-encoded body content received in response that was in error.
        type: string
      response_code:
        description: HTTP response code encountered in error response.
        format: int32
        type: integer
      timestamp:
        description: >-
          When the error was observed.  RFC 3339 format, per OpenAPI
          specification.
        format: date-time
        type: string
    required:
      - endpoint_url
      - response_code
      - problem
      - timestamp
    type: object
  PutIdentificationServiceAreaNotificationParameters:
    description: >-
      Parameters of a message informing of new full information for an
      Identification Service Area.  Pushed (by a client, not the DSS) directly
      to clients with subscriptions when another client makes a change to
      airspace within a cell with a subscription.
    properties:
      extents:
        $ref: '#/definitions/Volume4D'
        description: |-
          The new or updated extents of the Identification Service Area.

          Omitted if Identification Service Area was deleted.
      service_area:
        $ref: '#/definitions/IdentificationServiceArea'
        description: >-
          Identification Service Area that the notifying client changed or
          created.


          If this field is populated, the Identification Service Area was
          created or updated.  If this field is not populated, the
          Identification Service Area was deleted.
      subscriptions:
        description: Subscription(s) prompting this notification.
        items:
          $ref: '#/definitions/SubscriptionState'
        type: array
    required:
      - subscriptions
    type: object
  PutIdentificationServiceAreaResponse:
    description: >-
      Response to a request to create or update a reference to an Identification
      Service Area in the DSS.
    properties:
      service_area:
        $ref: '#/definitions/IdentificationServiceArea'
        description: Resulting service area stored in DSS.
      subscribers:
        description: >-
          DSS subscribers that this client now has the obligation to notify of
          the Identification Service Area changes just made.  This client must
          call POST for each provided URL according to the `/uss/isas/{id}` path
          API.
        items:
          $ref: '#/definitions/SubscriberToNotify'
        type: array
    required:
      - service_area
      - subscribers
    type: object
  PutSubscriptionResponse:
    description: Response for a request to create or update a subscription.
    properties:
      constraints:
        description: >-
          Constraints in or near the subscription area at the time of
          creation/update, if `constraint_url` callback was specified.
        items:
          $ref: '#/definitions/Constraint'
        type: array
      identification_service_areas:
        description: >-
          Identification Service Areas in or near the subscription area at the
          time of creation/update, if `identification_service_area_url` callback
          was specified.
        items:
          $ref: '#/definitions/IdentificationServiceArea'
        type: array
      operational_intents:
        description: >-
          OperationalIntents in or near the subscription area at the time of
          creation/update, if `operational_intent_url` callback was specified.
        items:
          $ref: '#/definitions/OperationalIntent'
        type: array
      subscription:
        $ref: '#/definitions/Subscription'
        description: Result of the operation on the subscription.
    required:
      - subscription
    type: object
  RIDAircraftPosition:
    description: Position of an aircraft as reported for remote ID purposes.
    properties:
      accuracy_h:
        $ref: '#/definitions/HorizontalAccuracy'
        description: >-
          Horizontal error that is likely to be present in this reported
          position.  Required when `extrapolated` field is true and always in
          the entry for the current state.
      accuracy_v:
        $ref: '#/definitions/VerticalAccuracy'
        description: >-
          Vertical error that is likely to be present in this reported
          position.  Required when `extrapolated` field is true and always in
          the entry for the current state.
      alt:
        description: >-
          Geodetic altitude (NOT altitude above launch, altitude above ground,
          or EGM96): aircraft distance above the WGS84 ellipsoid as measured
          along a line that passes through the aircraft and is normal to the
          surface of the WGS84 ellipsoid.  This value is provided in meters and
          must have a minimum resolution of 1 meter.
        example: 1321.2
        format: float
        type: number
      extrapolated:
        description: >-
          True if this position was generated primarily by computation rather
          than primarily from a direct instrument measurement.  Assumed false if
          not specified.
        type: boolean
      lat:
        $ref: '#/definitions/Latitude'
      lng:
        $ref: '#/definitions/Longitude'
      pressure_altitude:
        description: >-
          The uncorrected altitude (based on reference standard 29.92 inHg,
          1013.25 mb) provides a reference for algorithms that utilize "altitude
          deltas" between aircraft.  This value is provided in meters and must
          have a minimum resolution of 1 meter.
        format: float
        type: number
    required:
      - lat
      - lng
      - alt
    type: object
  RIDAircraftState:
    description: State of an aircraft for the purposes of remote ID.
    properties:
      group_ceiling:
        description: >-
          Maximum altitude (meters WGS84-HAE) of Group Operation.  This value
          contains the "Operating Area Ceiling" data from the common data
          dictionary when group operation area is specified by point-radius.
        format: float
        type: number
      group_count:
        description: >-
          When operating a group (or formation or swarm), number of aircraft in
          group.  This value contains the "Operating Area Count" data from the
          common data dictionary when group operation area is specified by
          point-radius.
        exclusiveMinimum: false
        format: int32
        minimum: 1
        type: integer
      group_floor:
        description: >-
          Minimum altitude (meters WGS84-HAE) of Group Operation.  If not
          specified, ground level shall be assumed.  This value contains the
          "Operating Area Floor" data from the common data dictionary when group
          operation area is specified by point-radius.
        format: float
        type: number
      group_radius:
        description: >-
          Farthest horizontal distance from reported group location at which an
          aircraft in the group may be located (meters).  This value contains
          the "Operating Area Radius" data from the common data dictionary when
          group operation area is specified by point-radius.
        exclusiveMinimum: true
        format: float
        minimum: 0
        type: number
      group_time_end:
        description: >-
          Time at which a group operation starts.  This value contains the
          "Operation Area End" data from the common data dictionary when group
          operation area is specified by point-radius.
        format: date-time
        type: string
      group_time_start:
        description: >-
          Time at which a group operation starts.  This value contains the
          "Operation Area Start" data from the common data dictionary when group
          operation area is specified by point-radius.
        format: date-time
        type: string
      height:
        $ref: '#/definitions/RIDHeight'
      operational_status:
        $ref: '#/definitions/RIDOperationalStatus'
      position:
        $ref: '#/definitions/RIDAircraftPosition'
      speed:
        description: Ground speed of flight in meters per second.
        example: 1.9
        exclusiveMinimum: false
        format: float
        minimum: 0
        type: number
      speed_accuracy:
        $ref: '#/definitions/SpeedAccuracy'
        description: Accuracy of horizontal ground speed.
      timestamp:
        description: >-
          Time at which this state was valid.  This may be the time coming from
          the source, such as a GPS, or the time when the system computes the
          values using an algorithm such as an Extended Kalman Filter (EKF). 
          Timestamp must be expressed with a minimum resolution of 1/10th of a
          second.  RFC 3339 format, per OpenAPI specification.
        format: date-time
        type: string
      timestamp_accuracy:
        description: >-
          Declaration of timestamp accuracy, which is the largest difference
          between Timestamp and true time of applicability for any of the
          following fields: Latitude, Longitude, Geodetic Altitude, Pressure
          Altitude of Position, Height. to determine time of applicability of
          the location data provided.  Expressed in seconds, precise to 1/10ths
          of seconds. The accuracy reflects the 95% uncertainty bound value for
          the timestamp.
        exclusiveMinimum: false
        format: float
        minimum: 0
        type: number
      track:
        description: >-
          Direction of flight expressed as a "True North-based" ground track
          angle.  This value is provided in degrees East of North with a minimum
          resolution of 1 degree.
        exclusiveMaximum: true
        exclusiveMinimum: false
        format: float
        maximum: 360
        minimum: 0
        type: number
      vertical_speed:
        description: 'Speed up (vertically) WGS84-HAE, m/s.'
        example: 0.2
        format: float
        type: number
    required:
      - timestamp
      - timestamp_accuracy
      - accuracy_h
      - accuracy_v
      - speed
      - vertical_speed
      - track
      - speed_accuracy
      - position
    type: object
  RIDAircraftType:
    description: >-
      Type of aircraft for the purposes of remote ID.


      `VTOL` is a fixed wing aircraft that can take off vertically.  `Rotocraft`
      includes multirotor.
    enum:
      - NotDeclared
      - Aeroplane
      - Rotorcraft
      - Gyroplane
      - VTOL
      - Ornithopter
      - Glider
      - Kite
      - FreeBalloon
      - CaptiveBalloon
      - Airship
      - FreeFallOrParachute
      - Rocket
      - TetheredPoweredAircraft
      - GroundObstacle
      - Other
    type: string
  RIDAuthData:
    description: Additional authentication data.
    properties:
      data:
        description: Authentication data in form specified by `format`.
        type: string
      format:
        description: Format of additional authentication data.
        type: string
    required:
      - format
      - data
    type: object
  RIDFlight:
    description: Description of a remote ID flight.
    properties:
      aircraft_type:
        $ref: '#/definitions/RIDAircraftType'
        description: Generic type of aircraft.
      current_state:
        $ref: '#/definitions/RIDAircraftState'
        description: >-
          The most up-to-date state of the aircraft.  Required when the aircraft
          is currently in the requested area unless `volumes` is specified.


          If current data is not being received from the UAS by the Service
          Provider, the lack of change in this field is sufficient to indicate
          that current data is not being received.
      id:
        $ref: '#/definitions/RIDFlightID'
      recent_positions:
        description: >-
          A short collection of recent aircraft movement, specified only when
          `include_recent_positions` is true.  If `volumes` is not specified and
          `include_recent_positions` is true, then this field is required.


          Recent positions provided in this field must conform to requirements
          in the standard which generally prohibit including positions outside
          the requested area except transitionally when the aircraft enters or
          exits the requested area, and which prohibit including positions that
          not sufficiently recent.


          Note that a UI should not draw a connective line between two
          consecutive position reports that both lie outside the requested area.
        items:
          $ref: '#/definitions/RIDRecentAircraftPosition'
        type: array
      simulated:
        description: >-
          If specified as true, this flight is not a physical aircraft; it is
          just a simulation to test the system.
        type: boolean
      volumes:
        description: >-
          The set of spacetime volumes the aircraft is within.  Required if
          `current_state` is not specified.  The fields `time_start` and
          `time_end` are required if `current_state` is not specified.
        items:
          $ref: '#/definitions/Volume4D'
        minItems: 1
        type: array
    required:
      - id
      - aircraft_type
    type: object
  RIDFlightDetails:
    description: >-
      Details about a flight reported by a remote ID service provider.  At least
      one of the registration or serial fields must be filled if required by
      CAA.
    properties:
      auth_data:
        $ref: '#/definitions/RIDAuthData'
      id:
        description: 'ID for this flight, matching argument in request.'
        example: a3423b-213401-0023
        type: string
      operation_description:
        description: >-
          Free-text field that enables the operator to describe the purpose of a
          flight, if so desired.
        example: >-
          SafeFlightDrone company doing survey with DJI Inspire 2. See my
          privacy policy www.example.com/privacy.
        type: string
      operator_id:
        description: 'CAA-issued registration/license ID for the remote pilot or operator. '
        type: string
      operator_location:
        $ref: '#/definitions/LatLngPoint'
        description: Location of party controlling the aircraft.
      registration_number:
        description: >-
          If a CAA provides a method of registering UAS, this number is provided
          by the CAA or its authorized representative.  Required when required
          by law in a region.
        example: FA12345897
        type: string
      serial_number:
        description: >-
          Can be specified when no registration ID exists and required by law in
          a region. This is expressed in the ANSI/CTA-2063 Physical Serial
          Number format.
        example: INTCJ123-4567-890
        type: string
    required:
      - id
    type: object
  RIDFlightID:
    description: >-
      ID, unique to a remote ID service provider, which identifies a particular
      flight for which the remote ID service provider is providing remote ID
      services.


      The following characters are not allowed: \0 \t \r \n # % / : ? @ [ \ ]
    example: uss1.JA6kHYCcByQ-6AfU
    maxLength: 255
    minLength: 1
    type: string
  RIDFlightsURL:
    $ref: '#/definitions/URL'
    description: >-
      The URL at which the remote ID flights and their details may be
      retrieved.  See `/flights` and `/flights/{id}/details` paths for
      specification of this endpoint.

      This URL is the base flights resource.  If this URL is specified as
      https://example.com/flights then the flight details for a particular {id}
      may be obtained at the URL https://example.com/flights/{id}/details.  This
      URL may not have a trailing / character.
    example: 'https://example.com/flights'
    type: string
  RIDHeight:
    description: A relative altitude for the purposes of remote ID.
    properties:
      distance:
        description: >-
          Distance above reference datum.  This value is provided in meters and
          must have a minimum resolution of 1 meter.
        format: float
        type: number
      reference:
        description: The reference datum above which the height is reported.
        enum:
          - TakeoffLocation
          - GroundLevel
        type: string
    required:
      - distance
      - reference
    type: object
  RIDOperationalStatus:
    description: Indicates operational status of associated aircraft.
    enum:
      - Undeclared
      - Ground
      - Airborne
    type: string
  RIDRecentAircraftPosition:
    description: ''
    properties:
      position:
        $ref: '#/definitions/RIDAircraftPosition'
      time:
        description: >-
          Time at which this position applied.  RFC 3339 format, per OpenAPI
          specification.
        format: date-time
        type: string
    required:
      - time
      - position
    type: object
  RogueFlight:
    description: Details about a rogue flight inside a Constraint.
    properties:
      flight_id:
        $ref: '#/definitions/RIDFlightID'
        description: >-
          This flight ID may be used to request real-time position updates for
          the rogue aircraft in this Constraint through the specified remote ID
          interface.
      position_reporting_url:
        $ref: '#/definitions/RIDFlightsURL'
    type: object
  SearchConstraintReferencesResponse:
    description: Response to DSS query for ConstraintReferences in an area of interest.
    properties:
      constraint_references:
        description: ConstraintReferences in the area of interest.
        items:
          $ref: '#/definitions/ConstraintReference'
        type: array
    required:
      - constraint_references
    type: object
  SearchIdentificationServiceAreasResponse:
    description: >-
      Response to DSS query for Identification Service Areas in an area of
      interest.
    properties:
      service_areas:
        description: Identification Service Areas in the area of interest.
        items:
          $ref: '#/definitions/IdentificationServiceArea'
        type: array
    required:
      - service_areas
    type: object
  SearchOperationalIntentReferencesResponse:
    description: >-
      Response to DSS query for OperationalIntentReferences in an area of
      interest.
    properties:
      operational_intent_references:
        description: OperationalIntentReferences in the area of interest.
        items:
          $ref: '#/definitions/OperationalIntentReference'
        type: array
    required:
      - operational_intent_references
    type: object
  SearchSubscriptionsResponse:
    description: Response to DSS query for subscriptions in a particular area.
    properties:
      subscriptions:
        description: Subscriptions that overlap the specified area.
        items:
          $ref: '#/definitions/Subscription'
        type: array
    required:
      - subscriptions
    type: object
  SpeedAccuracy:
    description: |-
      This is the same enumeration scale and values from ADS-B NACv.

      `SAUnknown`: Unknown speed accuracy

      `SA10mpsPlus`: > 10 m/s

      `SA10mps`: < 10 m/s

      `SA3mps`: < 3 m/s

      `SA1mps`: < 1 m/s

      `SA03mps`: < 0.3 m/s
    enum:
      - SAUnknown
      - SA10mpsPlus
      - SA10mps
      - SA3mps
      - SA1mps
      - SA03mps
    type: string
  SubscriberToNotify:
    description: >-
      Subscriber to notify of a creation/change/deletion of a change in the
      airspace.  This is provided by the DSS to a client changing the airspace,
      and it is the responsibility of the client changing the airspace (they
      will receive a set of these notification requests) to send a notification
      to each specified `url`.
    properties:
      subscriptions:
        description: Subscription(s) prompting this notification.
        items:
          $ref: '#/definitions/SubscriptionState'
        type: array
      url:
        $ref: '#/definitions/URL'
        description: >-
          The endpoint that the client mutating the airspace should provide the
          update to.  API depends on the DSS action taken that triggered this
          notification request.
    required:
      - subscriptions
      - url
    type: object
  Subscription:
    description: >-
      Specification of a geographic area that a client is interested in on an
      ongoing basis (e.g., “planning area”).  Internal to the DSS.
    properties:
      callbacks:
        $ref: '#/definitions/SubscriptionCallbacks'
      id:
        $ref: '#/definitions/SubscriptionUUID'
        description: Unique identifier for this subscription.
      notification_index:
        $ref: '#/definitions/SubscriptionNotificationIndex'
      owner:
        description: >-
          Assigned by the DSS based on creating client’s ID (via access token). 
          Used for restricting mutation and deletion operations to owner.
        example: myuss
        type: string
      time_end:
        description: >-
          If set, this subscription will be automatically removed after this
          time.  RFC 3339 format, per OpenAPI specification.
        format: date-time
        type: string
      time_start:
        description: >-
          If set, this Subscription will not generate any notifications before
          this time.  RFC 3339 format, per OpenAPI specification.
        format: date-time
        type: string
      version:
        $ref: '#/definitions/Version'
    required:
      - id
      - url
      - notification_index
      - owner
      - version
      - callbacks
    type: object
  SubscriptionCallbacks:
    description: >-
      Endpoints that should be called when an applicable event occurs.  At least
      one field must be specified.
    properties:
      constraints_url:
        $ref: '#/definitions/ConstraintDetailsURL'
        description: >-
          If specified, other clients will be instructed by the DSS to call this
          endpoint when a Constraint relevant to this Subscription is created,
          modified, or deleted.  Must implement POST according to the
          `/uss/constraints/{id}` path API.
      identification_service_area_url:
        $ref: '#/definitions/IdentificationServiceAreaURL'
        description: >-
          If specified, other clients will be instructed by the DSS to call this
          endpoint when an Identification Service Area relevant to this
          Subscription is created, modified, or deleted.  Must implement PUT and
          DELETE according to the `/uss/isas/{id}` path API.
      operational_intents_url:
        $ref: '#/definitions/OperationalIntentDetailsURL'
        description: >-
          If specified, other clients will be instructed by the DSS to call this
          endpoint when an Operation relevant to this Subscription is created,
          modified, or deleted.  Must implement POST according to the
          `/uss/ops/{id}` path API.
    type: object
  SubscriptionNotificationIndex:
    description: >-
      Tracks the notifications sent for a subscription so the subscriber can
      detect missed notifications more easily.
    format: int32
    type: integer
  SubscriptionState:
    description: State of AreaSubscription which is causing a notification to be sent.
    properties:
      notification_index:
        $ref: '#/definitions/SubscriptionNotificationIndex'
      subscription_id:
        $ref: '#/definitions/SubscriptionUUID'
    required:
      - subscription
    type: object
  SubscriptionUUID:
    $ref: '#/definitions/UUIDv4'
    description: >-
      Universally-unique identifier for a Subscription communicated through the
      DSS.  Formatted as UUIDv4.
  Token:
    $ref: '#/definitions/UUIDv4'
    description: Universally-unique identifier associated with a specific set of data.
  URL:
    description: Valid http or https URL.
    type: string
  UUIDv4:
    description: UUID v4.
    example: 03e5572a-f733-49af-bc14-8a18bd53ee39
    maxLength: 36
    minLength: 36
    type: string
  UpdateConstraintReferenceParameters:
    description: Parameters for a request to update a ConstraintReference in the DSS.
    properties:
      details_url:
        $ref: '#/definitions/ConstraintDetailsURL'
      error_reports_url:
        $ref: '#/definitions/ErrorReportsURL'
      extents:
        $ref: '#/definitions/Volume4D'
        description: >-
          The bounding spacetime extents of this ConstraintReference.  End time
          must be specified.  If start time is not specified, it will be set to
          the current time.  Start times in the past should be rejected by the
          DSS, except that it may adjust very recent start times to the current
          time.
    required:
      - extents
      - details_url
    type: object
  UpdateHostNameDownParameters:
    description: >-
      Parameters of a request to change the status of a hostname's "down" status
      in the DSS.
    properties:
      down:
        description: >-
          If true, the DSS should consider this hostname to be down.  Future
          OperationalIntents whose details are hosted by this hostname may be
          disabled by the DSS if another USS wishes to plan in the area.
        type: boolean
    required:
      - down
    type: object
  UpdateIdentificationServiceAreaParameters:
    description: >-
      Parameters for a request to update an Identification Service Area in the
      DSS.
    properties:
      extents:
        $ref: '#/definitions/Volume4D'
        description: >-
          The bounding spacetime extents of this Identification Service Area. 
          End time must be specified.  If start time is not specified, it will
          remain unchanged.  Start times in the past should be rejected by the
          DSS unless they are unchanged from the Identification Service Area's
          current start time.


          These extents should not reveal any sensitive information about the
          flight or flights within them.  This means, for instance, that extents
          should not tightly-wrap a flight path, nor should they generally be
          centered around the takeoff point of a single flight.
      flights_url:
        $ref: '#/definitions/RIDFlightsURL'
    required:
      - extents
      - flights_url
    type: object
  UpdateOperationalIntentReferenceParameters:
    description: >-
      Parameters for a request to update an OperationalIntentReference in the
      DSS.
    properties:
      details_url:
        $ref: '#/definitions/OperationalIntentDetailsURL'
      error_reports_url:
        $ref: '#/definitions/ErrorReportsURL'
      extents:
        $ref: '#/definitions/Volume4D'
        description: >-
          The bounding spacetime extents of this OperationalIntentReference. 
          End time must be specified.  If start time is not specified, it will
          be set to the current time.  Start times in the past should be
          rejected by the DSS, except that it may adjust very recent start times
          to the current time.
      key:
        $ref: '#/definitions/DeconflictionKey'
        description: >-
          Proof that the client is aware of all relevant Entities with the
          requirement that the client has deconflicted with all these Entities. 
          Relevant Entities for OperationalIntents consist of all Constraints,
          and OperationalIntents with equal or higher priority.
      priority:
        $ref: '#/definitions/OperationalIntentPriority'
    required:
      - extents
      - details_url
      - priority
      - key
    type: object
  UpdateSubscriptionParameters:
    description: Parameters for a request to update a subscription in the DSS.
    properties:
      callbacks:
        $ref: '#/definitions/SubscriptionCallbacks'
      extents:
        $ref: '#/definitions/Volume4D'
        description: >-
          The spacetime extents of the volume to subscribe to.


          This subscription will automatically be deleted after its end time if
          it has not been refreshed by then.  If end time is not specified, the
          value will be chosen automatically by the DSS.


          Note that some Entities triggering notifications may lie entirely
          outside the requested area.
    required:
      - extents
      - callbacks
    type: object
  Version:
    description: >-
      A version string used to reference an object at a particular point in
      time. Any updates to an object must contain the corresponding version to
      maintain idempotent updates.
    type: string
  VerticalAccuracy:
    description: |-
      This is the GVA enumeration from ADS-B, plus some finer values for UAs.

      `VAUnknown`: Unknown vertical accuracy

      `VA150mPlus`: > 150m

      `VA150m`: < 150m

      `VA45m`: < 45m

      `VA25m`: < 25m

      `VA10m`: < 10m

      `VA3m`: < 3m

      `VA1m`: < 1m
    enum:
      - VAUnknown
      - VA150mPlus
      - VA150m
      - VA45m
      - VA25m
      - VA10m
      - VA3m
      - VA1m
    type: string
  Volume3D:
    description: >-
      A three-dimensional geographic volume consisting of a vertically-extruded
      polygon.
    properties:
      altitude_hi:
        $ref: '#/definitions/Altitude'
        description: Maximum bounding altitude of this volume.
      altitude_lo:
        $ref: '#/definitions/Altitude'
        description: Minimum bounding altitude of this volume.
      footprint:
        $ref: '#/definitions/GeoPolygon'
        description: Projection of this volume onto the earth's surface.
    required:
      - footprint
    type: object
  Volume4D:
    description: Contiguous block of geographic spacetime.
    properties:
      spatial_volume:
        $ref: '#/definitions/Volume3D'
        description: Constant spatial extent of this volume.
      time_end:
        description: 'End time of this volume.  RFC 3339 format, per OpenAPI specification.'
        format: date-time
        type: string
      time_start:
        description: >-
          Beginning time of this volume.  RFC 3339 format, per OpenAPI
          specification.
        format: date-time
        type: string
    required:
      - spatial_volume
    type: object
info:
  description: >-
    Interface to Discovery and Synchronization Service and service providers
    used by participating clients to discover and inform other service
    providers.


    Unless otherwise specified, fields specified in a message but not declared
    in the API shall be ignored.
  title: Discovery and Synchronization Service
  version: 0.0.0
paths:
  /v1/dss/op_refs:
    description: ''
    get:
      description: >-
        Retrieve all OperationalIntentReferences in the DAR for a given area
        during the given time.  Note that references to some OperationalIntents
        lying entirely outside the requested area may be returned as well.
      operationId: searchOperationalIntentReferences
      parameters:
        - description: >-
            The area in which to search for OperationalIntentReferences. 
            References for some OperationalIntents near this area but wholly
            outside it may also be returned.
          in: query
          name: area
          required: true
          type: string
        - description: >-
            If specified, indicates non-interest in any OperationalIntents that
            end before this time.  RFC 3339 format, per OpenAPI specification.
          format: date-time
          in: query
          name: earliest_time
          required: true
          type: string
        - description: >-
            If specified, indicates non-interest in any OperationalIntents that
            start after this time.  RFC 3339 format, per OpenAPI specification.
          format: date-time
          in: query
          name: latest_time
          required: true
          type: string
      produces:
        - application/json
      responses:
        '200':
          description: OperationalIntentReferences were successfully retrieved.
          schema:
            $ref: '#/definitions/SearchOperationalIntentReferencesResponse'
        '400':
          description: One or more input parameters were missing or invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: >-
            Bearer access token was not provided in Authorization header, token
            could not be decoded, or token was invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: >-
            The access token was decoded successfully but did not include a
            scope appropriate to this endpoint.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '413':
          description: The requested area was too large.
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - AuthFromAuthorizationAuthority:
            - utm.read.operational_intents
      summary: /dss/op_refs
      tags:
        - dss_ops
    summary: Set of OperationalIntentReferences in the DSS.
  '/v1/dss/op_refs/{id}':
    get:
      description: Retrieve OperationalIntentReference information from the DSS.
      operationId: getOperationalIntentReference
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OperationalIntentReference was retrieved successfully.
          schema:
            $ref: '#/definitions/GetOperationalIntentReferenceResponse'
        '400':
          description: One or more input parameters were missing or invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: >-
            Bearer access token was not provided in Authorization header, token
            could not be decoded, or token was invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: >-
            The access token was decoded successfully but did not include a
            scope appropriate to this endpoint.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: The requested Entity could not be found.
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - AuthFromAuthorizationAuthority:
            - utm.read.operational_intents
      summary: '/dss/op_refs/{id}'
      tags:
        - dss_ops
    parameters:
      - description: EntityUUID of the OperationalIntentReference.
        in: path
        name: id
        required: true
    put:
      consumes:
        - application/json
      description: >-
        Create a new OperationalIntentReference.  This call will fail if an
        OperationalIntentReference with the same ID already exists.
      operationId: createOperationalIntentReference
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CreateOperationalIntentReferenceParameters'
      produces:
        - application/json
      responses:
        '200':
          description: An OperationalIntentReference was created successfully in the DSS.
          schema:
            $ref: '#/definitions/ChangeOperationalIntentReferenceResponse'
        '400':
          description: >-
            * One or more input parameters were missing or invalid.

            * The request attempted to mutate the Identification Service Area in
            a disallowed way.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: >-
            Bearer access token was not provided in Authorization header, token
            could not be decoded, or token was invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: >-
            The access token was decoded successfully but did not include a
            scope appropriate to this endpoint.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: >-
            * The provided key did not prove knowledge of all current and
            relevant airspace Entities

            * An OperationalIntentReference with the specified ID already
            exists.

            * Despite repeated attempts, the DSS was unable to update the DAR
            because of other simultaneous changes.
          schema:
            $ref: '#/definitions/AirspaceConflictResponse'
        '413':
          description: The area of the OperationalIntentReference is too large.
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - AuthFromAuthorizationAuthority:
            - utm.write.operational_intents
      summary: '/dss/op_refs/{id}'
      tags:
        - dss_ops
    summary: An OperationalIntentReference in the DSS.
  '/v1/dss/op_refs/{id}/{version}':
    delete:
      description: Delete an OperationalIntentReference.
      operationId: deleteOperationalIntentReference
      parameters: []
      produces:
        - application/json
      responses:
        '200':
          description: OperationalIntentReference was successfully deleted from DSS.
          schema:
            $ref: '#/definitions/ChangeOperationalIntentReferenceResponse'
        '400':
          description: One or more input parameters were missing or invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: >-
            Bearer access token was not provided in Authorization header, token
            could not be decoded, or token was invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: >-
            * The access token was decoded successfully but did not include a
            scope appropriate to this endpoint.

            * The OperationalIntentReference does not belong to the client
            requesting deletion.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Entity could not be deleted because it could not be found.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: >-
            * The specified OperationalIntentReference's current version does
            not match the provided version.

            * Despite repeated attempts, the DSS was unable to update the DAR
            because of other simultaneous changes.
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - AuthFromAuthorizationAuthority:
            - utm.write.operational_intents
      summary: '/dss/op_refs/{id}/{version}'
      tags:
        - dss_ops
    parameters:
      - description: EntityUUID of the OperationalIntentReference.
        in: path
        name: id
        required: true
      - description: >-
          Version string used to reference an OperationalIntentReference at a
          particular point in time.  Matches the `token` field in the OVN of the
          OperationalIntentReference.  Any updates to an existing
          OperationalIntentReference must contain the corresponding version to
          maintain idempotent updates.
        in: path
        name: version
        required: true
        type: string
    put:
      consumes:
        - application/json
      description: >-
        Update an OperationalIntentReference.  The full content of the existing
        OperationalIntentReference will be replaced with the provided
        information as only the most recent version is retained.
      operationId: updateOperationalIntentReference
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/UpdateOperationalIntentReferenceParameters'
      produces:
        - application/json
      responses:
        '200':
          description: >-
            An existing OperationalIntentReference was updated successfully in
            the DSS.
          schema:
            $ref: '#/definitions/ChangeOperationalIntentReferenceResponse'
        '400':
          description: >-
            * One or more input parameters were missing or invalid.

            * The request attempted to mutate the OperationalIntentReference in
            a disallowed way.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: >-
            Bearer access token was not provided in Authorization header, token
            could not be decoded, or token was invalid.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '403':
          description: >-
            The access token was decoded successfully but did not include a
            scope appropriate to this endpoint.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '409':
          description: >-
            * The provided key did not prove knowledge of all current and
            relevant airspace Entities

            * The specified OperationalIntentReference's current version does
            not match the provided version.

            * Despite repeated attempts, the DSS was unable to update the DAR
            because of other simultaneous changes.
          schema:
            $ref: '#/definitions/AirspaceConflictResponse'
        '413':
          description: The area of the OperationalIntentReference is too large.
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - AuthFromAuthorizationAuthority:
            - utm.write.operational_intents
      summary: '/dss/op_refs/{id}/{version}'
      tags:
        - dss_ops
    summary: A specific version of an OperationalIntentReference in the DSS.
security:
  - AuthFromAuthorizationAuthority:
      - dss.read.identification_service_areas
      - dss.write.identification_service_areas
      - utm.read.operational_intents
      - utm.write.operational_intents
      - utm.read.constraints
      - utm.write.constraints
      - dss.write.hostnames
securityDefinitions:
  AuthFromAuthorizationAuthority:
    description: >-
      Authorization from, or on behalf of, an authorization authority.  This
      authority shall issue access tokens that are JSON Web Tokens as defined in
      RFC 7519, using the `RS256` algorithm for the signature, and publish to
      all providers the public key for verifying that signature.


      The following fields shall be included in the JWT claim for access tokens
      issued by this authority:

      * `iss`, with the URL at which the token generation request was received.

      * `exp`, with a time no further than 1 hour in the future.

      * `sub`, with unique ID of the client requesting the access token.

      * `scope`, with an array of strings indicating the scopes granted.


      Multiple scopes for a single token shall be granted if requested.  The
      tokens granted by this authority shall protect against reuse of received
      tokens to impersonate the sender to other recipients (via use of the `aud`
      claim or other means).


      Clients shall provide these access tokens in an `Authorization` header in
      the form `Bearer <token>` in accordance with RFC 6750.
    flow: application
    scopes:
      dss.read.identification_service_areas: >-
        Client may query, read, or create subscriptions for Identification
        Service Areas for remote ID.  A remote ID display provider shall be
        granted this scope upon request.
      dss.write.hostnames: Client may update the status of hostnames in the DSS.
      dss.write.identification_service_areas: >-
        Client may create, edit, and delete Identification Service Areas for
        remote ID.  A remote ID service provider shall be granted this scope
        upon request.
      utm.read.constraints: 'Client may query, read, or create subscriptions for Constraints for UTM.'
      utm.read.operational_intents: >-
        Client may query, read, or create subscriptions for OperationalIntents
        for UTM.
      utm.write.constraints: 'Client may create, edit, and delete Constraints for UTM.'
      utm.write.operational_intents: 'Client may create, edit, and delete OperationalIntents for UTM.'
    tokenUrl: 'https://example.com/oauth/token'
    type: oauth2
swagger: '2.0'
tags:
  - description: >-
      Endpoints exposed by the DSS server for Identification Service Area
      Entities.
    name: dss_isas
  - description: >-
      Endpoints exposed by the DSS server for OperationalIntentReference
      Entities.
    name: dss_ops
  - description: Endpoints exposed by the DSS server for ConstraintReference Entities.
    name: dss_constraints
  - description: Endpoints exposed by the DSS server for Subscriptions.
    name: dss_subscriptions
  - description: Endpoints exposed by the DSS server for tracking hostname statuses.
    name: dss_hostnames
  - description: >-
      Endpoints exposed by remote ID service providers for peer-peer
      communication.
    name: p2p_rid
  - description: Endpoints exposed by UTM service providers for peer-peer communication.
    name: p2p_utm
x-components: {}

